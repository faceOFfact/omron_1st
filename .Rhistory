x <- c(1,2,3,4,5)
1/x
y <- c(x,0,x)
v <- 2*x+y-1
v
x
y
(x+1)[(!is.na(x)) & x>0] -> z
z
fruit <- c(5, 10, 1, 20)
names(fruit) <- c("orange", "banana", "apple", "peach")
lunch <- fruit[c("apple","orange")]
lunch
fruit
x[2]
class(x)
class(fruit)
x=c(3,2)
a=(1:4,dim=c(2,2))
a <- array(1:4,dim=c(2,2))
z <- a %*% x
z
a
x
x <- t(x)
x
demo()
y <- c(1,2)
z = x * y
z
z <- x %*% y
z <- x * y
z
library(e1071)
library("e1071", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:e1071", unload=TRUE)
getwd()
setwd("/Users/faceOFfact/Desktop/omron_data")
library("e1071", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
data <- read.csv("factory_trans.csv", header=FALSE)
inputData <- data.frame(data[, c(6, 11, 131)], response = as.factor(data[, c(25)]))
svmfit <- svm(response ~ ., data = inputData, kernel = "radial", cost = 10, scale = FALSE)
nrow(inputData)
ncol(inputData)
View(inputData)
View(inputData)
inputData <- data.frame(data[, c(6, 11, 131)], response = as.factor(data[, c(216)]))
svmfit <- svm(response ~ ., data = inputData, kernel = "radial", cost = 10, scale = FALSE)
mean(inputData$response == predict(svmfit))
svmfit <- svm(response ~ ., data = inputData, kernel = "radial", cost = 10, gamma = 1000, scale = FALSE)
mean(inputData$response == predict(svmfit))
factory.R
source("factory.R")
source("factory.R")
source("factory.R")
source("factory.R")
source("factory.R")
